@page "/prediction"
@inject PredictionViewModel ViewModel
@inject PredictionService PredictionService

<PageTitle>Prediction IA</PageTitle>

<h3>Prédiction IA</h3>

<!-- Section Température -->
<div style="margin-top: 20px;">
    <h4>Données de température et prédictions :</h4>
    <button @onclick="FetchTemperatureData" class="btn btn-primary">Obtenir les données de température et les prédictions</button>
</div>

@if (ViewModel.IsLoading)
{
    <p>Chargement...</p>
}
else if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
{
    <p style="color: red;">@ViewModel.ErrorMessage</p>
}
else
{
    <!-- Affichage des données récupérées -->
    @if (ViewModel.AllData.Count == 0)
    {
        <p>Aucune donnée disponible. Cliquez sur le bouton pour récupérer les données.</p>
    }
    else
    {
        <table class="table" style="margin-top: 20px;">
            <thead>
                <tr>
                    <th>Température (°C)</th>
                    <th>Temps</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var data in ViewModel.AllData)
                {
                    <tr>
                        <td>@data.Temperature °C</td>
                        <td>@data.Time</td>
                        <td>@(data.IsPredicted ? "Prédite" : "Actuelle")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private async Task FetchTemperatureData()
    {
        // Effacer les anciennes données avant d'en récupérer de nouvelles
        ViewModel.AllData.Clear();
        await ViewModel.FetchAllDataAsync();  // Utilise la méthode qui combine les températures actuelles et les prédictions
    }
}
