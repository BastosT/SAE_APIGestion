@page "/salles"
@using SAE_CLIENTGestion.Models
@using SAE_CLIENTGestion.ViewModels;
@inject SallesViewModel ViewModel

<PageTitle>Salles</PageTitle>

<div class="container">
    <h3>Liste des Salles</h3>

    @if (!string.IsNullOrEmpty(ViewModel.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ViewModel.SuccessMessage
            <button type="button" class="btn-close" @onclick="() => ViewModel.SuccessMessage = null"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @ViewModel.ErrorMessage
            <button type="button" class="btn-close" @onclick="() => ViewModel.ErrorMessage = null"></button>
        </div>
    }

    <!-- Bouton Ajouter -->
    <button class="btn btn-primary mb-3" @onclick="() => { currentSalle = new(); showModal = true; isNewSalle = true; }">
        Ajouter une Salle
    </button>

    @if (ViewModel.IsLoading)
    {
        <p><em>Chargement des salles...</em></p>
    }
    else if (ViewModel.Salles.Count == 0)
    {
        <p>Aucune salle trouvée.</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nom</th>
                    <th>Surface</th>
                    <th>Type</th>
                    <th>Bâtiment</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var salle in ViewModel.Salles)
                {
                    <tr>
                        <td>@salle.SalleId</td>
                        <td>@salle.Nom</td>
                        <td>@salle.Surface m²</td>
                        <td>@salle.TypeSalleId</td>
                        <td>@salle.BatimentId</td>
                        <td>
                            <button class="btn btn-warning btn-sm" @onclick="() => EditSalle(salle)">
                                Modifier
                            </button>
                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteSalle(salle)">
                                Supprimer
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <!-- Modal pour Ajout/Modification -->
    @if (showModal)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@(isNewSalle ? "Ajouter une salle" : "Modifier la salle")</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="@currentSalle" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label for="nom" class="form-label">Nom</label>
                                <InputText id="nom" class="form-control" @bind-Value="currentSalle.Nom" />
                                <ValidationMessage For="@(() => currentSalle.Nom)" />
                            </div>

                            <div class="mb-3">
                                <label for="surface" class="form-label">Surface (m²)</label>
                                <InputNumber id="surface" class="form-control" @bind-Value="currentSalle.Surface" />
                                <ValidationMessage For="@(() => currentSalle.Surface)" />
                            </div>

                            <div class="mb-3">
                                <label for="typeSalle" class="form-label">Type de Salle</label>
                                <InputSelect id="typeSalle" class="form-control" @bind-Value="currentSalle.TypeSalleId">
                                    @foreach (var type in ViewModel.TypesSalle)
                                    {
                                        <option value="@type.TypeSalleId">@type.Nom</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => currentSalle.TypeSalleId)" />
                            </div>

                            <div class="mb-3">
                                <label for="batiment" class="form-label">Bâtiment</label>
                                <InputSelect id="batiment" class="form-control" @bind-Value="currentSalle.BatimentId">
                                    @foreach (var batiment in ViewModel.Batiments)
                                    {
                                        <option value="@batiment.BatimentId">@batiment.Nom</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => currentSalle.BatimentId)" />
                            </div>

                            <button type="submit" class="btn btn-primary">Enregistrer</button>
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">Annuler</button>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }

    <!-- Modal de confirmation pour la suppression -->
    @if (showDeleteConfirmation)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmer la suppression</h5>
                        <button type="button" class="btn-close" @onclick="() => showDeleteConfirmation = false"></button>
                    </div>
                    <div class="modal-body">
                        <p>Êtes-vous sûr de vouloir supprimer cette salle ?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="() => showDeleteConfirmation = false">Annuler</button>
                        <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">Supprimer</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
</div>

@code {
    private bool showModal = false;
    private bool showDeleteConfirmation = false;
    private bool isNewSalle = false;
    private Salle currentSalle = new();
    private Salle salleToDelete;

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadDataAsync();
    }

    private void EditSalle(Salle salle)
    {
        currentSalle = new Salle
            {
                SalleId = salle.SalleId,
                Nom = salle.Nom,
                Surface = salle.Surface,
                TypeSalleId = salle.TypeSalleId,
                BatimentId = salle.BatimentId
            };
        isNewSalle = false;
        showModal = true;
    }

    private void DeleteSalle(Salle salle)
    {
        salleToDelete = salle;
        showDeleteConfirmation = true;
    }

    private async Task ConfirmDelete()
    {
        if (salleToDelete != null)
        {
            if (await ViewModel.DeleteSalleAsync(salleToDelete.SalleId))
            {
                showDeleteConfirmation = false;
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        bool success;
        if (isNewSalle)
        {
            success = await ViewModel.AddSalleAsync(currentSalle);
        }
        else
        {
            success = await ViewModel.UpdateSalleAsync(currentSalle);
        }

        if (success)
        {
            showModal = false;
        }
    }

    private void CloseModal()
    {
        showModal = false;
        currentSalle = new();
        ViewModel.ErrorMessage = null;
        ViewModel.SuccessMessage = null;
    }
}